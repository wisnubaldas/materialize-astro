---
interface Props {
  column: string[];
  dataPath: string;
  addColumn?: string[];
}
const { column, dataPath, addColumn = [] } = Astro.props;
const tableId = "dt_" + Math.floor(Math.random() * 10000);
---

<!-- Ajax Sourced Server-side -->
<div class="card">
  <div class="card-datatable text-nowrap pt-0 m-2 table-responsive">
    <table
      class="datatables-ajax table table-bordered table-striped table-sm table-hover"
      id={tableId}
      data-idnya={tableId}
      data-path={dataPath}
    >
      <thead class="table-primary">
        <tr>
          {addColumn?.map((col) => <th>#</th>)}
          {column.map((col) => <th>{col.replace(/_/g, " ")}</th>)}
        </tr>
      </thead>
    </table>
  </div>
</div>
<!-- masukin ke object window buat akalin ssr astro -->
<script define:vars={{ column, addColumn }} defer>
  const add_column = addColumn.map((col) => {
    if (col.includes("boolean:")) {
      let parts = col.split(":");
      return {
        data: "",
        defaultContent: "",
        orderable: false,
        searchable: false,
        render: (data, type, row) => {
          if (row[parts[1]] == 1) {
            return `<span class="badge bg-success">Sukses</span>`;
          } else {
            return `<span class="badge bg-danger">Gagal</span>`;
          }
        },
      };
    } else {
      return {
        data: "",
        defaultContent: "",
        orderable: false,
        searchable: false,
        render: (data, type, row) =>
          `<button class="btn btn-default btn-sm" data-id="${row.id}">${col}</button>`,
      };
    }
  });

  window.TBLComponent = {};
  const coloumn = column.map((col) => {
    return {
      data: col,
    };
  });
  window.TBLComponent.column = [...add_column, ...coloumn];
</script>

<!-- jalanin datatables nya -->
<script>
  import $ from "~/assets/js/ajax-setup";
  import { getCookie, INV } from "~/assets/js/module/utils";
  import "~/components/DatatablesComponent";
  let el = document.querySelector(".datatables-ajax");
  const path = (el as HTMLElement).dataset.path;
  let idNya = (el as HTMLElement).dataset.idnya;
  let dt_ajax_table = $("#" + idNya);
  document.addEventListener("DOMContentLoaded", function () {
    // console.log(window);
    if (dt_ajax_table.length) {
      let dt_ajax = dt_ajax_table.DataTable({
        processing: true,
        serverSide: true, // kalau backend handle paging/sorting/filtering
        responsive: true,
        columns: (window as any).TBLComponent.column,
        ajax: {
          url: INV.back_path + path,
          type: "POST",
          contentType: "application/json",
          data: function (d: any) {
            // d = object bawaan DataTables (draw, start, length, dll.)
            return JSON.stringify(d);
          },
          beforeSend: function (xhr: any, settings: any) {
            const token = getCookie("auth_token");
            if (token) {
              xhr.setRequestHeader("Authorization", "Bearer " + token);
            }
          },
        },
      });
    }
  });
</script>
<!--/ Ajax Sourced Server-side -->
