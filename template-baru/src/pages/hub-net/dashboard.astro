---
import "@assets/libs/apex-charts/apex-charts.scss";
import CardCongratulations from "@components/Back/CardCongratulations.astro";
import CardSmall from "@components/Back/CardSmall.astro";
import GetDataDiHubnet from "@components/Back/GetDataDiHubnet.astro";
import Layout from "@layouts/Layout.astro";
import axios from "axios";

// deklarasi awal di luar try
let data: any = null;
let cardArray: { title: string; value: number; icon: string }[] = [];
let total: number = 0;

try {
  const cookieHeader = Astro.request.headers.get("cookie") || "";
  console.log("Cookie Header:", cookieHeader); // Debug: Log the cookie header

  const cookies = Object.fromEntries(
    cookieHeader.split(/; */).map(c => {
      const [key, ...v] = c.split("=");
      return [key, v.join("=")];
    })
  );
  const token = cookies["access_token"];

  const apiInstance = axios.create({
    baseURL: import.meta.env.PUBLIC_BACKEND_PATH,
    headers: { Authorization: `Bearer ${token}`, "Content-Type": "application/json" }
  });

  const [lastSendingRes, cardDataRes] = await Promise.all([
    apiInstance.get("/hubnet/last-sending"),
    apiInstance.get("/hubnet/dashboard-card")
  ]);

  data = lastSendingRes.data;
  const icn = [
    "streamline-plump-color:ai-generate-portrait-image-spark-flat",
    "streamline-plump-color:airplane-disabled",
    "streamline-plump-color:add-bell-notification-flat",
    "streamline-plump-color:bag-suitcase-4",
    "streamline-plump-color:bus",
    "streamline-plump-color:calendar-check-flat",
    "streamline-plump-color:cog-automation",
    "streamline-plump-color:convert-pdf-1-flat"
  ];
  // isi array
  cardArray = Object.entries(cardDataRes.data).map(([key, value], index) => ({
    title: key,
    value: Number(value),
    icon: icn[index]
  }));
  total = cardArray.reduce((acc, item) => acc + item.value, 0);
  // console.log(cardArray);
} catch (err) {
  if (axios.isAxiosError(err) && err.response) {
    console.error("Error response data:", err.response.data);
    console.error("Error response status:", err.response.status);
    console.error("Error response headers:", err.response.headers);
  } else if (axios.isAxiosError(err) && err.request) {
    console.error("Error request:", err.request);
  } else {
    console.error("Error message:", (err as Error).message);
  }
}
---

<Layout title='Dashboard HUBNET'>
  <div class='container-xxl flex-grow-1 container-p-y'>
    <div class='row gy-4 mb-4'>
      <CardCongratulations data={data} total={total} />
      {
        cardArray.map((item, index) => (
          <CardSmall key={index} total={total} title={item.title} value={item.value} icon={item.icon} />
        ))
      }
      <GetDataDiHubnet />
    </div>
  </div>
</Layout>
